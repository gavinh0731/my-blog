"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[4354],{8673:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var t=e(4848),s=e(8453);const a={author:"Gavin",source:"",rating:1,description:"",type:"",title:"PlantUML",created:new Date("2024-04-02T03:06:22.000Z"),updated:new Date("2024-04-02T03:06:22.000Z"),tags:["docusaurus"]},l=void 0,i={id:"\u8a18\u9304\u8abf\u6574\u904e\u7684\u5167\u5bb9/plantuml",title:"PlantUML",description:"",source:"@site/vault_docusaurus/\u8a18\u9304\u8abf\u6574\u904e\u7684\u5167\u5bb9/plantuml.md",sourceDirName:"\u8a18\u9304\u8abf\u6574\u904e\u7684\u5167\u5bb9",slug:"/\u8a18\u9304\u8abf\u6574\u904e\u7684\u5167\u5bb9/plantuml",permalink:"/my-blog/rb_docusaurus/\u8a18\u9304\u8abf\u6574\u904e\u7684\u5167\u5bb9/plantuml",draft:!1,unlisted:!1,tags:[{label:"docusaurus",permalink:"/my-blog/rb_docusaurus/tags/docusaurus"}],version:"current",frontMatter:{author:"Gavin",source:"",rating:1,description:"",type:"",title:"PlantUML",created:"2024-04-02T03:06:22.000Z",updated:"2024-04-02T03:06:22.000Z",tags:["docusaurus"]},sidebar:"tutorialSidebar",previous:{title:"Translate your site",permalink:"/my-blog/rb_docusaurus/tutorial-extras/translate-your-site"}},o={},u=[{value:"Installing",id:"installing",level:2},{value:"Integration",id:"integration",level:2}];function c(n){const r={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["\u53c3\u8003: ",(0,t.jsx)(r.a,{href:"https://github.com/akebifiky/remark-simple-plantuml",children:"remark-simple-plantuml"})]}),"\n",(0,t.jsx)(r.p,{children:"remark-simple-plantuml is a simple plugin for remarkjs that converts PlantUML code blocks to image nodes."}),"\n",(0,t.jsx)(r.h2,{id:"installing",children:"Installing"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"$ npm install --save @akebifiky/remark-simple-plantuml\n"})}),"\n",(0,t.jsx)(r.h2,{id:"integration",children:"Integration"}),"\n",(0,t.jsx)(r.p,{children:"You can use this plugin in any frameworks support remarkjs."}),"\n",(0,t.jsxs)(r.p,{children:["If you want to use in the classic preset of Docusaurus 2, like me, set configuration in your ",(0,t.jsx)(r.code,{children:"docusaurus.config.js"})," like following."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"const simplePlantUML = require(\"@akebifiky/remark-simple-plantuml\");\r\n\r\n// your configurations...\r\n\r\nconst config: Config = {\r\n    //....\r\n   presets: [\r\n    [\r\n      'classic',\r\n      {\r\n        docs: {\r\n          sidebarPath: './sidebars.ts',\r\n          remarkPlugins: [simplePlantUML],\r\n          //....\r\n        },\r\n        blog: {\r\n         //....\r\n          remarkPlugins: [simplePlantUML],\r\n        },\r\n        //....\r\n      } satisfies Preset.Options,\r\n    ],\r\n  ],\r\n  //....\r\n}\r\n\r\n//...\n"})}),"\n",(0,t.jsx)(r.h1,{id:"your-markdown-including-plantuml-code-block",children:"Your markdown including PlantUML code block"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-plantuml",metastring:"Your title",children:"class SimplePlantUMLPlugin {\r\n    + transform(syntaxTree: AST): AST\r\n}\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-plantuml",children:"@startuml\r\nskinparam ActorBackgroundColor gray\r\n'actor \u80cc\u666f\u984f\u8272'\r\nskinparam UseCaseBackgroundColor gray\r\n'UseCase \u80cc\u666f\u984f\u8272'\r\n\r\n'\u53ef\u4ee5\u4f7f\u7528\u5169\u500b::\u4f86\u8868\u793aactor\u6216\"\"\u4f86\u8868\u793aactor\u6216actor'\r\n:Customer1:\r\n\"Customer2\"\r\nactor Customer3\r\n'\u53ef\u4ee5\u4f7f\u7528()\u4f86\u8868\u793a\u7528\u4f8b\u6216usercar\u4f86\u8868\u793a'\r\n(Withdraw Cash)\r\nusecase First\r\n\r\n@enduml\n"})})]})}function d(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>l,x:()=>i});var t=e(6540);const s={},a=t.createContext(s);function l(n){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function i(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),t.createElement(a.Provider,{value:r},n.children)}}}]);